version: '3.8'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      api:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../static:/usr/share/nginx/html/static

  api:
    build: ..
    env_file: .env
    environment:
      DB_HOST: db
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./app/core:/opt/app/core
      - ./app/todolist:/opt/app/todolist
      - django_static:/opt/static

  migrations:
    build: ..
    env_file: .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      timeout: 5s
      interval: 5s
      retries: 10

volumes:
  pg_data:
  django_static:
